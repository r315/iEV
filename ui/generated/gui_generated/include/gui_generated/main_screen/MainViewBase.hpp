/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAIN_VIEW_BASE_HPP
#define MAIN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/Container.hpp>

#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}

    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image Main_BG;
    touchgfx::Button GoToConfig;
    touchgfx::Container batteryGaugeContainer;
    touchgfx::Image batteryGauge;

    touchgfx::Container TempContainer;
    touchgfx::BoxWithBorder EngineTemp_BG;
    touchgfx::Image MotorTempIcon;
    touchgfx::TextAreaWithOneWildcard MotorTemp;
    touchgfx::TextAreaWithOneWildcard ControllerTemp;
    touchgfx::Image ControllerTempIcon;

    touchgfx::Container CurrentContainer;
    touchgfx::BoxWithBorder CurrentConsume_BG;
    touchgfx::TextAreaWithOneWildcard MotorCurrent;

    touchgfx::Container BatIconContainer;
    touchgfx::BoxWithBorder BatIcon_BG;
    touchgfx::Image BatIcon;
    touchgfx::TextAreaWithOneWildcard BatteryVoltage;

    touchgfx::Container Hodometer;
    touchgfx::TextAreaWithOneWildcard Kilometers;
    touchgfx::TextAreaWithOneWildcard TenthsKilometer;


    /*
     * Wildcard Buffers
     */
    static const uint16_t MOTORTEMP_SIZE = 4;
    touchgfx::Unicode::UnicodeChar MotorTempBuffer[MOTORTEMP_SIZE];
    static const uint16_t CONTROLLERTEMP_SIZE = 4;
    touchgfx::Unicode::UnicodeChar ControllerTempBuffer[CONTROLLERTEMP_SIZE];
    static const uint16_t MOTORCURRENT_SIZE = 6;
    touchgfx::Unicode::UnicodeChar MotorCurrentBuffer[MOTORCURRENT_SIZE];
    static const uint16_t BATTERYVOLTAGE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar BatteryVoltageBuffer[BATTERYVOLTAGE_SIZE];
    static const uint16_t KILOMETERS_SIZE = 7;
    touchgfx::Unicode::UnicodeChar KilometersBuffer[KILOMETERS_SIZE];
    static const uint16_t TENTHSKILOMETER_SIZE = 7;
    touchgfx::Unicode::UnicodeChar TenthsKilometerBuffer[TENTHSKILOMETER_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // MAIN_VIEW_BASE_HPP
